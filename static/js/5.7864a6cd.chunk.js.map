{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sHCsCXC,EApCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAEVP,EAAGJ,KATN,KAScI,EAAGH,OATjB,QAcJ,OACE,yBAAKW,UAAWC,IAAQlB,OACtB,2CAAiBO,EAAjB,KACA,qCACS,oCAAUN,EAAMkB,MAAMC,QAAQ,O,gCCzBvCC,E,kLAEFC,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKrB,MAAM2B,UACdF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAACqB,GAAD,OAC7B,kBAAC,EAAD,CACEV,OAAQU,EAAMV,MACdjB,YAAa2B,EAAM3B,YACnBQ,IAAKmB,EAAMC,SAIV,6BAAMJ,O,GAhBIK,aAmCNC,uBAfS,SAACC,GACvB,MAAO,CACLP,OAAQO,EAAMJ,MAAMH,OACpBE,QAASK,EAAMJ,MAAMD,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAII,SAACU,GAC1B,MAAO,CACLZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI3DO,CAGbK,YAAiBhB,EAAQiB","file":"static/js/5.7864a6cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3o3Vh\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        key={ig.name}\r\n        style={{\r\n          textTransform: 'capitalize',\r\n          display: 'inline-block',\r\n          margin: '0 8px',\r\n          border: '1px solid #ccc',\r\n          padding: '5px',\r\n        }}>\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput} </p>\r\n      <p>\r\n        Price: <strong>${props.price.toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler-classBased';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => (\r\n        <Order\r\n          price={+order.price}\r\n          ingredients={order.ingredients}\r\n          key={order.id}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}